#include <ESP8266WiFi.h>
#include <PubSubClient.h>
 

 
WiFiClient espClient;
PubSubClient client(espClient);
 #include <Wire.h>
#include <ErriezBH1750.h>
#include <Adafruit_Sensor.h>
#include <Adafruit_BME280.h>
#include "DHT.h"


#define DHTPIN 14 // o sensor dht11 foi conectado ao pino A1 no nosso tutorial
#define DHTTYPE DHT11
#define SEALEVELPRESSURE_HPA (1013.25)

Adafruit_BME280 bme;
BH1750 sensor(LOW);
DHT dht(DHTPIN, DHTTYPE);

//Chuva
int pino_d = D0; // Pino ligado ao D0 do sensor
int pino_a = A0; // Pino ligado ao A0 do sensor
int val_d = 0;   // Armazena o valor lido do pino digital
int val_a = 0;   // Armazena o valor lido do pino analógico

unsigned long delayTime;

const char* ssid = "seu ssid";
const char* password =  "sua senha de rede";
const char* mqttServer = "ip do servidor";
const int mqttPort = 1883;
const char* mqttUser = "usuario do dojot";
const char* mqttPassword = "senha do dojot";
//const char* mqtt_topic = "/TENANT/Identificador do Dispositivo (ID)/attrs";
//Exemplo: "/admin/12345/attrs"
const char* mqtt_topic = "/admin/12345/attrs";
void setup() {
   bool status;

  status = bme.begin(0x76);
  status = bme.begin(0x76);
  if (!status) {
    Serial.println("Sensor Não encontrado.");
    while (1);
  }
  Serial.begin(9600);
 
  WiFi.begin(ssid, password);
   
  Wire.begin();


  sensor.begin(ModeOneTime, ResolutionLow);
  dht.begin();
  // Sensores INPUT
  pinMode(pino_d, INPUT);
  pinMode(pino_a, INPUT);
 
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.println("Conectando ao WiFi..");
  }
  Serial.println("Conexão com o WiFi estabelecida!");
 
  client.setServer(mqttServer, mqttPort);
  client.setCallback(callback);
 
  while (!client.connected()) {
    Serial.println("Conectando ao MQTT...");
 
    if (client.connect("ESP8266Client", mqttUser, mqttPassword )) {
 
      Serial.println("Conectado!");  
 
    } else {
 
      Serial.print("Falho de Status  ");
      Serial.print(client.state());
      delay(2000);
 
    }
  }
  
  
}
 
void callback(char* topic, byte* payload, unsigned int length) {
 
  Serial.print("Mensagem recebida no tópico: ");
  Serial.println(topic);
 
  Serial.print("Mensagem:");
  for (int i = 0; i < length; i++) {
    Serial.print((char)payload[i]);
  }
 
  Serial.println();
  Serial.println("-----------------------");
 
}
 
void loop() {
  val_d = digitalRead(pino_d);
  val_a = analogRead(pino_a);
  
  char pay[100];
  char str[10];
  
  //TEMPERATURA
  float Temperatura = dht.readTemperature();
  dtostrf(Temperatura,4,2,str);
  sprintf(pay, " { \"Temperatura\": %s}",str);
  client.publish(mqtt_topic, pay); //Topic name
  Serial.println(pay);

  //Umidade
  float Umidade = dht.readHumidity();
  dtostrf(Umidade,4,2,str);
  sprintf(pay, " { \"Umidade\": %s}",str);
  client.publish(mqtt_topic, pay); //Topic name
  Serial.println(pay);
  
  //SENSAÇÃO TERMICA
  float SensacaoTermica = dht.computeHeatIndex(Temperatura,Umidade,false);
  dtostrf(SensacaoTermica,4,2,str);
  sprintf(pay, " { \"SensacaoTermica\": %s}",str);
  client.publish(mqtt_topic, pay); //Topic name
  Serial.println(pay);

  //CHUVA
  dtostrf(val_a,4,2,str);
  sprintf(pay, " { \"Chuva\": %s}",str);
  client.publish(mqtt_topic, pay); //Topic name
  Serial.println(pay);
  
  //ALTITUDE
  float Altitude = bme.readAltitude(SEALEVELPRESSURE_HPA);
  dtostrf(Altitude,4,2,str);
  sprintf(pay, " { \"Altitude\": %s}",str);
  client.publish(mqtt_topic, pay); //Topic name
   Serial.println(pay);
  
  //PRESSAO
  float Pressao =bme.readPressure() / 100.0F;
  dtostrf(Pressao,4,2,str);
  sprintf(pay, " { \"Pressao\": %s}",str);
  client.publish(mqtt_topic, pay); //Topic name
  Serial.println(pay);

  //LUMINOSIDADE
   uint16_t lux;
   if (sensor.waitForCompletion()) {
    
    lux = sensor.read();

    // Print light
   
  dtostrf(lux,4,2,str);
  sprintf(pay, " { \"Luminosidade\": %s}",str);
  client.publish(mqtt_topic, pay); //Topic name
   Serial.println(pay);

    
  }
  
  delay(6000);
  client.loop();
  Serial.println();
  Serial.println("-----------------------");
}
